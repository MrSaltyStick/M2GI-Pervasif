package org.m2gi.devices.window;

import java.util.List;

import javax.management.RuntimeErrorException;

import org.apache.felix.ipojo.annotations.Component;
import org.apache.felix.ipojo.annotations.Provides;
import org.apache.felix.ipojo.annotations.ServiceProperty;
import org.apache.felix.ipojo.annotations.StaticServiceProperty;

import fr.liglab.adele.icasa.device.util.AbstractDevice;
import fr.liglab.adele.icasa.location.Zone;
import fr.liglab.adele.icasa.simulator.SimulatedDevice;

@Component(name = "iCase.Window")
@Provides(properties = { @StaticServiceProperty(type = "java.lang.String", name = "") })
public class WindowDeviceImpl extends AbstractDevice implements WindowDevice,
		SimulatedDevice {
	
	private static final String CO2_VAR = "CO2Concentration";
	
	private static final String CO_VAR = "COConcentration";
	
	@ServiceProperty(name = WindowDevice.DEVICE_SERIAL_NUMBER, mandatory = true)
	private String m_serialNumber;
	
	private Zone m_zone;
	
	private boolean m_isOpen;
	
	public WindowDeviceImpl() {
		m_isOpen = false;
	}

	@Override
	public String getSerialNumber() {
		return m_serialNumber;
	}

	@Override
	public boolean isOpen() {
		return m_isOpen;
	}

	@Override
	public void open() {
		m_isOpen = true;
	}

	@Override
	public void close() {
		m_isOpen = false;
	}

	@Override
	public void enterInZones(List<Zone> zones) {
		if(zones.size() > 1) {
			throw new RuntimeException("A window can't be in two rooms at the same time");
		} else if(zones.size() == 1) {
			m_zone = zones.get(0);
		}
	}

}
